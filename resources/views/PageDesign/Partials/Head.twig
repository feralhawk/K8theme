<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="google-site-verification" content="Oq7yOEi9QxJW4QwWXGGWDBgw3ODw-g6scsTXx3Zfzus" />

{% set lang = services.sessionStorage.getLang() %}

<link rel="apple-touch-icon" sizes="57x57" href="../images/favicons/apple-icon-57x57.png">
<link rel="apple-touch-icon" sizes="60x60" href="../images/favicons/apple-icon-60x60.png">
<link rel="apple-touch-icon" sizes="72x72" href="../images/favicons/apple-icon-72x72.png">
<link rel="apple-touch-icon" sizes="76x76" href="../images/favicons/apple-icon-76x76.png">
<link rel="apple-touch-icon" sizes="114x114" href="../images/favicons/apple-icon-114x114.png">
<link rel="apple-touch-icon" sizes="120x120" href="../images/favicons/apple-icon-120x120.png">
<link rel="apple-touch-icon" sizes="144x144" href="../images/favicons/apple-icon-144x144.png">
<link rel="apple-touch-icon" sizes="152x152" href="../images/favicons/apple-icon-152x152.png">
<link rel="apple-touch-icon" sizes="180x180" href="../images/favicons/apple-icon-180x180.png">
<link rel="icon" type="image/png" sizes="192x192"  href="../images/favicons/android-icon-192x192.png">
<link rel="icon" type="image/png" sizes="32x32" href="../images/favicons/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="96x96" href="../images/favicons/favicon-96x96.png">
<link rel="icon" type="image/png" sizes="16x16" href="../images/favicons/favicon-16x16.png">
<link rel="manifest" href="../images/favicons/manifest.json">
<meta name="msapplication-TileColor" content="#000000">
<meta name="msapplication-TileImage" content="../images/favicons/ms-icon-144x144.png">
<meta name="theme-color" content="#000000">
<link rel="icon" type="img/ico" href="../images/favicons/favicon.ico">

{% set canonicalUrl = services.url.getCanonicalURL() %}
{% set languageUrls = services.url.getLanguageURLs() %}

{% if canonicalUrl is not null %}
    <link rel="canonical" href="{{ canonicalUrl }}">
{% endif %}

{% if services.url.isCanonical() %}
    {% for language, url in languageUrls %}
        <link rel="alternate" hreflang="{{language}}" href="{{url}}"/>
    {% endfor %}
{% endif %}

<style data-font="Custom-Font">
    {% set customFont =
        {
            regular: config('Ceres.custom-font-regular'),
            bold: config('Ceres.custom-font-bold'),
            italic: config('Ceres.custom-font-italic'),
            boldItalic: config('Ceres.custom-font-bold-italic')
        }
    %}

    {% if customFont.regular %}
        @font-face {
            font-family: "Custom-Font";
            src: url("{{ customFont.regular }}");
        }
    {% endif %}
    {% if customFont.bold %}
        @font-face {
            font-family: "Custom-Font";
            src: url("{{ customFont.bold }}");
            font-weight: bold;
        }
    {% endif %}
    {% if customFont.italic %}
        @font-face {
            font-family: "Custom-Font";
            src: url("{{ customFont.italic }}");
            font-style: italic;
        }
    {% endif %}
    {% if customFont.boldItalic %}
        @font-face {
            font-family: "Custom-Font";
            src: url("{{ customFont.boldItalic }}");
            font-weight: bold;
            font-style: italic;
        }
    {% endif %}
</style>

{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}

{% set logData = config("Ceres.log.data")|split(', ') %}
{% set sortValues = config("Ceres.sort.data")|split(', ') %}
{% set defaultSorting = config('Ceres.sort.defaultSorting') %}
{% set defaultSortingSearch = config('Ceres.sort.defaultSortingSearch') %}
{% set rowsPerPage = config('Ceres.pagination.rowsPerPage') | split(', ') %}
{% set columnsPerPage = config('Ceres.pagination.columnsPerPage') %}
{% set itemsPerPage = rowsPerPage[0] * columnsPerPage %}
{% set performanceLevel = config('Ceres.log.performance.level') %}
{% set itemName = config('Ceres.item.name') %}



{{ LayoutContainer.show("Ceres::Template.StyleOverwrite") }}



{{ get_shop_builder_styles() }}
